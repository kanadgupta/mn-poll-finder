<html lang='en'>
  <head>

    <!-- 
      This is the main Handlebars template for the site 
      - When the user visits the homepage or submits a color the app calls the endpoints in server.js
      - The server script passes data in here and the Handlebars code builds it into the HTML page
    -->

    <meta charset='utf-8' />
    <link rel='icon' href='https://glitch.com/favicon.ico' />
    <meta name='viewport' content='width=device-width, initial-scale=1' />

    <title>{{seo.title}}</title>

    <!-- Meta tags for SEO and social sharing -->
    <link rel='canonical' href='{{seo.url}}' />
    <meta name='description' content='{{seo.description}}' />
    <meta property='og:title' content='{{seo.title}}' />
    <meta property='og:type' content='article' />
    <meta property='og:url' content='{{seo.url}}' />
    <meta property='og:description' content='{{seo.description}}' />
    <meta property='og:image' content='{{seo.image}}' />
    <meta name='twitter:card' content='summary' />

    <!-- Import the webpage's stylesheet -->
    <link rel='stylesheet' href='/style.css' />

    <!-- This is a handlebars IF statement
         Checking for a custom "color" parameter from server.js -->
  </head>
  <body>
    <div class='wrapper'>
      <div class='content' role='main'>

        <!-- This is the start of content for our page -->
        <h1 class='title'>MPLS 2021 Poll Finder</h1>

        <!-- Add text indicating that we've changed color OR had an error -->
        {{#if precinct}}
          <p class='precinct-info'>
            The polling place for
            <b>{{address}}</b>
            is
            <b><i>[insert polling place here]</i></b>! (<a href='/'>Reset</a>)
          </p>
          <p class='precinct-info'>
            Before you vote, it might be helpful to know a few things...
          </p>
          <ul class='precinct-info'>
            <li><b>Precinct:</b> {{precinct.Precinct}}</li>
            <li><b>Park Board District:</b> {{precinct.Park}}</li>
            <li class='extra hidden'><b>Congressional District:</b> {{precinct.CongDist}}</li>
            <li class='extra hidden'><b>County:</b> {{precinct.County}}</li>
            <li class='extra hidden'><b>Minor Civil Division (MCD):</b> {{precinct.MCDName}}</li>
            <li class='extra hidden'><b>County Commissioner District:</b> {{precinct.CtyComDist}}</li>
            <li class='extra hidden'><b>State Senate District:</b> {{precinct.MNSenDist}}</li>
            <li class='extra hidden'><b>State Legislative District:</b> {{precinct.MNLegDist}}</li>
            <li class='extra hidden'><b>State Judicial District:</b> {{precinct.Judicial}}</li>
            {{! TODO: do I add these two properties back eventually? }}
            {{!-- <li class="extra hidden"><b>Soil and Water District:</b> {{precinct.SoilAndWater}}</li> --}}
            {{!-- <li class="extra hidden"><b>Hospital District:</b> {{precinct.Hospital}}</li> --}}
            <li class='extra hidden'><b>County ID:</b> {{precinct.CountyID}}</li>
            <li class='extra hidden'><b>MCD Code:</b> {{precinct.MCDCode}}</li>
            <li class='extra hidden'><b>Precinct Code:</b> {{precinct.PrecinctCode}}</li>
            <li><a aria-expanded='false' onclick='toggleInfo(event)' href=''>Show More...</a></li>
          </ul>
        {{/if}}

        {{#if addressError}}
          <p class='precinct-info'>

            <!-- The server script passes addressError if the user submission can't be matched -->
            Hmm. Couldn't find a polling place for
            <b>"{{addressError}}"</b>.
            <a href='?example=go'>Want to see an example?</a>
          </p>
        {{/if}}

        <div class='form-wrapper'>

          <!-- Our default paragraph/message -->
          {{#unless addressError}}
            {{#unless precinct}}

              <!-- There are fancier ways to do this, 
                 but nesting two "#unless" statements sets up an 
                 "if these are both missing..." condition -->
              <p>
                The open-source, API-backed poll finder that Steve Simon never built ðŸ’”
              </p>
            {{/unless}}
          {{/unless}}

          <!-- The "What's your favorite color?" form sends a POST request to the server
               Check server.js to see how it works -->
          <form class='address-form' method='get'>
            <label for='address'>

              <!-- We use the handlebars "#if" statement so the form can adapt to its situation -->
              {{#if precinct}}
                Try another address?<br />
              {{else}}
                What's your address?<br />
              {{/if}}
              <input id='address' name='address' required='required' type='text' />
            </label>

            <!-- If the user submits a value through the form 
                 it'll be passed to the server in the request body  -->
            <button type='submit'>Submit</button>
          </form>

          <!-- The "What's your favorite color?" form sends a POST request to the server
               Check server.js to see how it works -->
          <form class='address-form' onsubmit='submitCurrentLocation(event)'>
            <label for='currentLocation'>
              Or, try looking it up for your current location!
              <i>(experimental)</i><br />
              <!-- If the user submits a value through the form 
                  it'll be passed to the server in the request body  -->
              <button id='currentLocation' type='submit'>Current Location</button>
            </label>
          </form>

          <!-- This example link communicates with the server (server.js) 
               using a querystring and GET request instead of a form POST -->
          <br />Need an example?
          <a href='?example=go'>Click here!</a>
        </div>

        <!-- Instructions on using this project -->
        <div class='instructions'>
          <h2>
            Using this project
          </h2>
          <p>
            This is the Glitch
            <strong>Hello Node</strong>
            project. You can use it to build your own app. Check out README.md in the editor for more info and next
            steps you can take!
          </p>
        </div>

      </div>
    </div>
    <!-- The footer holds our remix button â€” you can use it for structure or cut it out âœ‚ -->
    <footer class='footer'>
      <div class='links'></div>
      <a class='btn--remix' target='_top' href='https://glitch.com/edit/#!/remix/glitch-hello-node'>
        <img
          src='https://cdn.glitch.com/605e2a51-d45f-4d87-a285-9410ad350515%2FLogo_Color.svg?v=1618199565140'
          alt=''
        />
        Remix on Glitch
      </a>
    </footer>
    <script>
      function submitCurrentLocation(e) {
        e.preventDefault();
        e.submitter.innerText = "Loading...";
        e.submitter.setAttribute('disabled', 'disabled');
        navigator.geolocation.getCurrentPosition(function(position) {
          const lat = position.coords.latitude;
          const long = position.coords.longitude;

          const queryString = new URLSearchParams({ lat, long });
          const pageUrl = '?' + queryString.toString();
          window.history.pushState('', '', pageUrl);

          window.location.reload();
          window.scrollTo(0, 0);
        });
      } 

      function toggleInfo(e) {
        e.preventDefault();
        // Toggle display of every hidden item
        document.querySelectorAll('li.extra').forEach(item => {
          item.classList.toggle('hidden');
        });
        // Update attributes on toggle element
        const isHidden = document.querySelector('li.extra').classList.contains('hidden');
        e.target.innerText = isHidden ? 'Show More...' : 'Show Less...';
        e.target.setAttribute('aria-expanded', !isHidden);
      }
    </script>
  </body>
</html>
